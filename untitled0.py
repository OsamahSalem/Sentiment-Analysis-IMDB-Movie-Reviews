# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LFJuDGrYnKQU60hwBzXXL-PnTiGubpa8
"""

!wget http://ai.stanford.edu/~amaas/data/sentiment/aclImdb_v1.tar.gz

!tar xvzf aclImdb_v1.tar.gz

import os
import pandas as pd

def load_imdb_data(directory):
    data = []
    labels = []

    for label in ["pos", "neg"]:
        path = os.path.join(directory, label)
        for file in os.listdir(path):
            with open(os.path.join(path, file), "r", encoding="utf-8") as f:
                data.append(f.read())
                labels.append(1 if label == "pos" else 0)  # 1 = Positive, 0 = Negative

    return pd.DataFrame({"review": data, "sentiment": labels})
# train and test
train_df = load_imdb_data("aclImdb/train")
test_df = load_imdb_data("aclImdb/test")

df = pd.concat([train_df, test_df], ignore_index=True)
print(df.head())
print(df.info())

from bs4 import BeautifulSoup

def remove_html_tags(text):
    return BeautifulSoup(text, "html.parser").get_text()

df["cleaned_review"] = df["review"].apply(remove_html_tags)

df["cleaned_review"] = df["cleaned_review"].str.lower()

import nltk
from nltk.tokenize import word_tokenize

nltk.download("punkt_tab")

# word tokenize
df["cleaned_review"] = df["cleaned_review"].apply(word_tokenize)

from nltk.corpus import stopwords

nltk.download("stopwords")
stop_words = set(stopwords.words("english"))

def remove_stopwords(tokens):
    return [word for word in tokens if word not in stop_words]

df["cleaned_review"] = df["cleaned_review"].apply(remove_stopwords)

from nltk.stem import WordNetLemmatizer
nltk.download("wordnet")
nltk.download("omw-1.4")

lemmatizer = WordNetLemmatizer()

def lemmatize_tokens(tokens):
    return [lemmatizer.lemmatize(word) for word in tokens]

df["cleaned_review"] = df["cleaned_review"].apply(lemmatize_tokens)

df["cleaned_review"] = df["cleaned_review"].apply(lambda tokens: " ".join(tokens))

df[["cleaned_review", "sentiment"]].to_csv("preprocessed_reviews.csv", index=False)

# output file
print("Saved in 'preprocessed_reviews.csv'.")